version: '3'

services:
  golangprometheus:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: golangprometheus
    restart: always
    ports:
      - '8080:8080'

  prometheus:
   image: prom/prometheus:v2.21.0
   ports:
     - 9000:9090
   volumes:
   - ./prometheus:/etc/prometheus
   - prometheus-data:/prometheus
   command: --web.enable-lifecycle --config.file=/etc/prometheus/prometheus.yml  # If you use --web.enable-lifecycle you can reload configuration files (e.g. rules) without restarting Prometheus:

  grafana:
    image: grafana/grafana:7.5.7
    ports:
      - 3000:3000
    restart: unless-stopped
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources # data source configuration
      - grafana-data:/var/lib/grafana # used to save dashboards

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100

volumes:
 prometheus-data:
 grafana-data: